// source: message-edm.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ding4.Email', null, global);
goog.exportSymbol('proto.ding4.Email.Content', null, global);
goog.exportSymbol('proto.ding4.Email.GA', null, global);
goog.exportSymbol('proto.ding4.Email.Schedule', null, global);
goog.exportSymbol('proto.ding4.EmailResult', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Email = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.Email.repeatedFields_, null);
};
goog.inherits(proto.ding4.Email, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Email.displayName = 'proto.ding4.Email';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Email.Content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Email.Content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Email.Content.displayName = 'proto.ding4.Email.Content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Email.Schedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Email.Schedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Email.Schedule.displayName = 'proto.ding4.Email.Schedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Email.GA = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Email.GA, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Email.GA.displayName = 'proto.ding4.Email.GA';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.EmailResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.EmailResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.EmailResult.displayName = 'proto.ding4.EmailResult';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.Email.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Email.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Email.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Email} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    formname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    content: (f = msg.getContent()) && proto.ding4.Email.Content.toObject(includeInstance, f),
    schedule: (f = msg.getSchedule()) && proto.ding4.Email.Schedule.toObject(includeInstance, f),
    ga: (f = msg.getGa()) && proto.ding4.Email.GA.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Email}
 */
proto.ding4.Email.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Email;
  return proto.ding4.Email.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Email} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Email}
 */
proto.ding4.Email.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFields(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormname(value);
      break;
    case 5:
      var value = new proto.ding4.Email.Content;
      reader.readMessage(value,proto.ding4.Email.Content.deserializeBinaryFromReader);
      msg.setContent(value);
      break;
    case 6:
      var value = new proto.ding4.Email.Schedule;
      reader.readMessage(value,proto.ding4.Email.Schedule.deserializeBinaryFromReader);
      msg.setSchedule(value);
      break;
    case 7:
      var value = new proto.ding4.Email.GA;
      reader.readMessage(value,proto.ding4.Email.GA.deserializeBinaryFromReader);
      msg.setGa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Email.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Email.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Email} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFormname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ding4.Email.Content.serializeBinaryToWriter
    );
  }
  f = message.getSchedule();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ding4.Email.Schedule.serializeBinaryToWriter
    );
  }
  f = message.getGa();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ding4.Email.GA.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Email.Content.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Email.Content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Email.Content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.Content.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fromaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    htmlcontent: jspb.Message.getFieldWithDefault(msg, 4, ""),
    footerLang: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Email.Content}
 */
proto.ding4.Email.Content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Email.Content;
  return proto.ding4.Email.Content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Email.Content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Email.Content}
 */
proto.ding4.Email.Content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromaddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtmlcontent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFooterLang(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Email.Content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Email.Content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Email.Content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.Content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFromaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHtmlcontent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFooterLang();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.ding4.Email.Content.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.Content} returns this
 */
proto.ding4.Email.Content.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fromName = 2;
 * @return {string}
 */
proto.ding4.Email.Content.prototype.getFromname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.Content} returns this
 */
proto.ding4.Email.Content.prototype.setFromname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fromAddress = 3;
 * @return {string}
 */
proto.ding4.Email.Content.prototype.getFromaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.Content} returns this
 */
proto.ding4.Email.Content.prototype.setFromaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string htmlContent = 4;
 * @return {string}
 */
proto.ding4.Email.Content.prototype.getHtmlcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.Content} returns this
 */
proto.ding4.Email.Content.prototype.setHtmlcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 footer_lang = 5;
 * @return {number}
 */
proto.ding4.Email.Content.prototype.getFooterLang = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Email.Content} returns this
 */
proto.ding4.Email.Content.prototype.setFooterLang = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Email.Schedule.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Email.Schedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Email.Schedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.Schedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timezone: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scheduleDate: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Email.Schedule}
 */
proto.ding4.Email.Schedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Email.Schedule;
  return proto.ding4.Email.Schedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Email.Schedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Email.Schedule}
 */
proto.ding4.Email.Schedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimezone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Email.Schedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Email.Schedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Email.Schedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.Schedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimezone();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScheduleDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.ding4.Email.Schedule.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Email.Schedule} returns this
 */
proto.ding4.Email.Schedule.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 timezone = 2;
 * @return {number}
 */
proto.ding4.Email.Schedule.prototype.getTimezone = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Email.Schedule} returns this
 */
proto.ding4.Email.Schedule.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string schedule_date = 3;
 * @return {string}
 */
proto.ding4.Email.Schedule.prototype.getScheduleDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.Schedule} returns this
 */
proto.ding4.Email.Schedule.prototype.setScheduleDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Email.GA.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Email.GA.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Email.GA} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.GA.toObject = function(includeInstance, msg) {
  var f, obj = {
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    ecommerceEnable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    utmcampaign: jspb.Message.getFieldWithDefault(msg, 3, ""),
    utmcontent: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Email.GA}
 */
proto.ding4.Email.GA.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Email.GA;
  return proto.ding4.Email.GA.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Email.GA} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Email.GA}
 */
proto.ding4.Email.GA.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEcommerceEnable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtmcampaign(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtmcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Email.GA.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Email.GA.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Email.GA} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Email.GA.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEcommerceEnable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUtmcampaign();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUtmcontent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool enable = 1;
 * @return {boolean}
 */
proto.ding4.Email.GA.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ding4.Email.GA} returns this
 */
proto.ding4.Email.GA.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool ecommerce_enable = 2;
 * @return {boolean}
 */
proto.ding4.Email.GA.prototype.getEcommerceEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ding4.Email.GA} returns this
 */
proto.ding4.Email.GA.prototype.setEcommerceEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string utmCampaign = 3;
 * @return {string}
 */
proto.ding4.Email.GA.prototype.getUtmcampaign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.GA} returns this
 */
proto.ding4.Email.GA.prototype.setUtmcampaign = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string utmContent = 4;
 * @return {string}
 */
proto.ding4.Email.GA.prototype.getUtmcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email.GA} returns this
 */
proto.ding4.Email.GA.prototype.setUtmcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string groupName = 1;
 * @return {string}
 */
proto.ding4.Email.prototype.getGroupname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.setGroupname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string fields = 2;
 * @return {!Array<string>}
 */
proto.ding4.Email.prototype.getFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.setFieldsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.addFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.ding4.Email.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional string formName = 4;
 * @return {string}
 */
proto.ding4.Email.prototype.getFormname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.setFormname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Content content = 5;
 * @return {?proto.ding4.Email.Content}
 */
proto.ding4.Email.prototype.getContent = function() {
  return /** @type{?proto.ding4.Email.Content} */ (
    jspb.Message.getWrapperField(this, proto.ding4.Email.Content, 5));
};


/**
 * @param {?proto.ding4.Email.Content|undefined} value
 * @return {!proto.ding4.Email} returns this
*/
proto.ding4.Email.prototype.setContent = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.clearContent = function() {
  return this.setContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Email.prototype.hasContent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Schedule schedule = 6;
 * @return {?proto.ding4.Email.Schedule}
 */
proto.ding4.Email.prototype.getSchedule = function() {
  return /** @type{?proto.ding4.Email.Schedule} */ (
    jspb.Message.getWrapperField(this, proto.ding4.Email.Schedule, 6));
};


/**
 * @param {?proto.ding4.Email.Schedule|undefined} value
 * @return {!proto.ding4.Email} returns this
*/
proto.ding4.Email.prototype.setSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.clearSchedule = function() {
  return this.setSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Email.prototype.hasSchedule = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GA ga = 7;
 * @return {?proto.ding4.Email.GA}
 */
proto.ding4.Email.prototype.getGa = function() {
  return /** @type{?proto.ding4.Email.GA} */ (
    jspb.Message.getWrapperField(this, proto.ding4.Email.GA, 7));
};


/**
 * @param {?proto.ding4.Email.GA|undefined} value
 * @return {!proto.ding4.Email} returns this
*/
proto.ding4.Email.prototype.setGa = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Email} returns this
 */
proto.ding4.Email.prototype.clearGa = function() {
  return this.setGa(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Email.prototype.hasGa = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.EmailResult.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.EmailResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.EmailResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.EmailResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    sn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    importsn: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.EmailResult}
 */
proto.ding4.EmailResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.EmailResult;
  return proto.ding4.EmailResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.EmailResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.EmailResult}
 */
proto.ding4.EmailResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImportsn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.EmailResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.EmailResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.EmailResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.EmailResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImportsn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sn = 1;
 * @return {string}
 */
proto.ding4.EmailResult.prototype.getSn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.EmailResult} returns this
 */
proto.ding4.EmailResult.prototype.setSn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string importSn = 2;
 * @return {string}
 */
proto.ding4.EmailResult.prototype.getImportsn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.EmailResult} returns this
 */
proto.ding4.EmailResult.prototype.setImportsn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.ding4);
