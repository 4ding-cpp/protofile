// source: a-submessage.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var seo_pb = require('./seo_pb.js');
goog.object.extend(proto, seo_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.ding4.Active', null, global);
goog.exportSymbol('proto.ding4.ActivityTarget', null, global);
goog.exportSymbol('proto.ding4.CustomerTarget', null, global);
goog.exportSymbol('proto.ding4.Footer', null, global);
goog.exportSymbol('proto.ding4.Image', null, global);
goog.exportSymbol('proto.ding4.Layout', null, global);
goog.exportSymbol('proto.ding4.Nav', null, global);
goog.exportSymbol('proto.ding4.ProductTarget', null, global);
goog.exportSymbol('proto.ding4.Rule', null, global);
goog.exportSymbol('proto.ding4.StyleColor', null, global);
goog.exportSymbol('proto.ding4.StyleColor.FooterStyle', null, global);
goog.exportSymbol('proto.ding4.StyleColor.HeaderStyle', null, global);
goog.exportSymbol('proto.ding4.StyleColor.LogoStyle', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Rule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Rule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Rule.displayName = 'proto.ding4.Rule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Active = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Active, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Active.displayName = 'proto.ding4.Active';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.CustomerTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.CustomerTarget.repeatedFields_, null);
};
goog.inherits(proto.ding4.CustomerTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.CustomerTarget.displayName = 'proto.ding4.CustomerTarget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.ProductTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.ProductTarget.repeatedFields_, null);
};
goog.inherits(proto.ding4.ProductTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.ProductTarget.displayName = 'proto.ding4.ProductTarget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.ActivityTarget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.ActivityTarget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.ActivityTarget.displayName = 'proto.ding4.ActivityTarget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Image.displayName = 'proto.ding4.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Layout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.Layout.repeatedFields_, null);
};
goog.inherits(proto.ding4.Layout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Layout.displayName = 'proto.ding4.Layout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Nav = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.Nav.repeatedFields_, null);
};
goog.inherits(proto.ding4.Nav, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Nav.displayName = 'proto.ding4.Nav';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Footer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.Footer.repeatedFields_, null);
};
goog.inherits(proto.ding4.Footer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Footer.displayName = 'proto.ding4.Footer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.StyleColor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.StyleColor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.StyleColor.displayName = 'proto.ding4.StyleColor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.StyleColor.LogoStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.StyleColor.LogoStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.StyleColor.LogoStyle.displayName = 'proto.ding4.StyleColor.LogoStyle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.StyleColor.HeaderStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.StyleColor.HeaderStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.StyleColor.HeaderStyle.displayName = 'proto.ding4.StyleColor.HeaderStyle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.StyleColor.FooterStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.StyleColor.FooterStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.StyleColor.FooterStyle.displayName = 'proto.ding4.StyleColor.FooterStyle';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Rule.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Rule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Rule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Rule.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    price: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Rule}
 */
proto.ding4.Rule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Rule;
  return proto.ding4.Rule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Rule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Rule}
 */
proto.ding4.Rule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Rule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Rule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Rule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Rule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 amount = 1;
 * @return {number}
 */
proto.ding4.Rule.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Rule} returns this
 */
proto.ding4.Rule.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 price = 2;
 * @return {number}
 */
proto.ding4.Rule.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Rule} returns this
 */
proto.ding4.Rule.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Active.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Active.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Active} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Active.toObject = function(includeInstance, msg) {
  var f, obj = {
    freeShipping: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    isRepeat: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    discount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    reduce: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    giveaway: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Active}
 */
proto.ding4.Active.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Active;
  return proto.ding4.Active.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Active} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Active}
 */
proto.ding4.Active.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFreeShipping(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRepeat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReduce(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGiveaway(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Active.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Active.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Active} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Active.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFreeShipping();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIsRepeat();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getReduce();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getGiveaway();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional bool free_shipping = 1;
 * @return {boolean}
 */
proto.ding4.Active.prototype.getFreeShipping = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ding4.Active} returns this
 */
proto.ding4.Active.prototype.setFreeShipping = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool is_repeat = 2;
 * @return {boolean}
 */
proto.ding4.Active.prototype.getIsRepeat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ding4.Active} returns this
 */
proto.ding4.Active.prototype.setIsRepeat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional double discount = 3;
 * @return {number}
 */
proto.ding4.Active.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Active} returns this
 */
proto.ding4.Active.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double reduce = 4;
 * @return {number}
 */
proto.ding4.Active.prototype.getReduce = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Active} returns this
 */
proto.ding4.Active.prototype.setReduce = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 giveaway = 5;
 * @return {number}
 */
proto.ding4.Active.prototype.getGiveaway = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Active} returns this
 */
proto.ding4.Active.prototype.setGiveaway = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.CustomerTarget.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.CustomerTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.CustomerTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.CustomerTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.CustomerTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, ""),
    birthday: jspb.Message.getFieldWithDefault(msg, 2, 0),
    register: jspb.Message.getFieldWithDefault(msg, 3, 0),
    itemsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.CustomerTarget}
 */
proto.ding4.CustomerTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.CustomerTarget;
  return proto.ding4.CustomerTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.CustomerTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.CustomerTarget}
 */
proto.ding4.CustomerTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBirthday(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRegister(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.CustomerTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.CustomerTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.CustomerTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.CustomerTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBirthday();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRegister();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string level = 1;
 * @return {string}
 */
proto.ding4.CustomerTarget.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.CustomerTarget} returns this
 */
proto.ding4.CustomerTarget.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 birthday = 2;
 * @return {number}
 */
proto.ding4.CustomerTarget.prototype.getBirthday = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.CustomerTarget} returns this
 */
proto.ding4.CustomerTarget.prototype.setBirthday = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 register = 3;
 * @return {number}
 */
proto.ding4.CustomerTarget.prototype.getRegister = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.CustomerTarget} returns this
 */
proto.ding4.CustomerTarget.prototype.setRegister = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string items = 4;
 * @return {!Array<string>}
 */
proto.ding4.CustomerTarget.prototype.getItemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ding4.CustomerTarget} returns this
 */
proto.ding4.CustomerTarget.prototype.setItemsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ding4.CustomerTarget} returns this
 */
proto.ding4.CustomerTarget.prototype.addItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.CustomerTarget} returns this
 */
proto.ding4.CustomerTarget.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.ProductTarget.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.ProductTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.ProductTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.ProductTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.ProductTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
    classList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    itemsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.ProductTarget}
 */
proto.ding4.ProductTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.ProductTarget;
  return proto.ding4.ProductTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.ProductTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.ProductTarget}
 */
proto.ding4.ProductTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addClass(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setItemsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.ProductTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.ProductTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.ProductTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.ProductTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
};


/**
 * repeated string class = 1;
 * @return {!Array<string>}
 */
proto.ding4.ProductTarget.prototype.getClassList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ding4.ProductTarget} returns this
 */
proto.ding4.ProductTarget.prototype.setClassList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ding4.ProductTarget} returns this
 */
proto.ding4.ProductTarget.prototype.addClass = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.ProductTarget} returns this
 */
proto.ding4.ProductTarget.prototype.clearClassList = function() {
  return this.setClassList([]);
};


/**
 * repeated int32 items = 2;
 * @return {!Array<number>}
 */
proto.ding4.ProductTarget.prototype.getItemsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ding4.ProductTarget} returns this
 */
proto.ding4.ProductTarget.prototype.setItemsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ding4.ProductTarget} returns this
 */
proto.ding4.ProductTarget.prototype.addItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.ProductTarget} returns this
 */
proto.ding4.ProductTarget.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.ActivityTarget.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.ActivityTarget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.ActivityTarget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.ActivityTarget.toObject = function(includeInstance, msg) {
  var f, obj = {
    urn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: (f = msg.getName()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.ActivityTarget}
 */
proto.ding4.ActivityTarget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.ActivityTarget;
  return proto.ding4.ActivityTarget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.ActivityTarget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.ActivityTarget}
 */
proto.ding4.ActivityTarget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrn(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.ActivityTarget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.ActivityTarget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.ActivityTarget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.ActivityTarget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string urn = 1;
 * @return {string}
 */
proto.ding4.ActivityTarget.prototype.getUrn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.ActivityTarget} returns this
 */
proto.ding4.ActivityTarget.prototype.setUrn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Value name = 2;
 * @return {?proto.google.protobuf.Value}
 */
proto.ding4.ActivityTarget.prototype.getName = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 2));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.ding4.ActivityTarget} returns this
*/
proto.ding4.ActivityTarget.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.ActivityTarget} returns this
 */
proto.ding4.ActivityTarget.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.ActivityTarget.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    src: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    link: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isBlank: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sku: jspb.Message.getFieldWithDefault(msg, 6, ""),
    target: (f = msg.getTarget()) && proto.ding4.ProductTarget.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 8, ""),
    source: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Image}
 */
proto.ding4.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Image;
  return proto.ding4.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Image}
 */
proto.ding4.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsBlank(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 7:
      var value = new proto.ding4.ProductTarget;
      reader.readMessage(value,proto.ding4.ProductTarget.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsBlank();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ding4.ProductTarget.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string src = 1;
 * @return {string}
 */
proto.ding4.Image.prototype.getSrc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setSrc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string alt = 2;
 * @return {string}
 */
proto.ding4.Image.prototype.getAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setAlt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.ding4.Image.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string link = 4;
 * @return {string}
 */
proto.ding4.Image.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 is_blank = 5;
 * @return {number}
 */
proto.ding4.Image.prototype.getIsBlank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setIsBlank = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string sku = 6;
 * @return {string}
 */
proto.ding4.Image.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ProductTarget target = 7;
 * @return {?proto.ding4.ProductTarget}
 */
proto.ding4.Image.prototype.getTarget = function() {
  return /** @type{?proto.ding4.ProductTarget} */ (
    jspb.Message.getWrapperField(this, proto.ding4.ProductTarget, 7));
};


/**
 * @param {?proto.ding4.ProductTarget|undefined} value
 * @return {!proto.ding4.Image} returns this
*/
proto.ding4.Image.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Image.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.ding4.Image.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string source = 9;
 * @return {string}
 */
proto.ding4.Image.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Image} returns this
 */
proto.ding4.Image.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.Layout.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Layout.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Layout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Layout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Layout.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: (f = msg.getTitle()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    second: jspb.Message.getFieldWithDefault(msg, 4, 0),
    imageList: jspb.Message.toObjectList(msg.getImageList(),
    proto.ding4.Image.toObject, includeInstance),
    itemsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    template: (f = msg.getTemplate()) && seo_pb.Template.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Layout}
 */
proto.ding4.Layout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Layout;
  return proto.ding4.Layout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Layout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Layout}
 */
proto.ding4.Layout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecond(value);
      break;
    case 5:
      var value = new proto.ding4.Image;
      reader.readMessage(value,proto.ding4.Image.deserializeBinaryFromReader);
      msg.addImage(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setItemsList(value);
      break;
    case 7:
      var value = new seo_pb.Template;
      reader.readMessage(value,seo_pb.Template.deserializeBinaryFromReader);
      msg.setTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Layout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Layout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Layout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Layout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSecond();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getImageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ding4.Image.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      6,
      f
    );
  }
  f = message.getTemplate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      seo_pb.Template.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.ding4.Layout.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Value title = 2;
 * @return {?proto.google.protobuf.Value}
 */
proto.ding4.Layout.prototype.getTitle = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 2));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.ding4.Layout} returns this
*/
proto.ding4.Layout.prototype.setTitle = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.clearTitle = function() {
  return this.setTitle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Layout.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 quantity = 3;
 * @return {number}
 */
proto.ding4.Layout.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 second = 4;
 * @return {number}
 */
proto.ding4.Layout.prototype.getSecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.setSecond = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated Image image = 5;
 * @return {!Array<!proto.ding4.Image>}
 */
proto.ding4.Layout.prototype.getImageList = function() {
  return /** @type{!Array<!proto.ding4.Image>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ding4.Image, 5));
};


/**
 * @param {!Array<!proto.ding4.Image>} value
 * @return {!proto.ding4.Layout} returns this
*/
proto.ding4.Layout.prototype.setImageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ding4.Image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ding4.Image}
 */
proto.ding4.Layout.prototype.addImage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ding4.Image, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.clearImageList = function() {
  return this.setImageList([]);
};


/**
 * repeated int32 items = 6;
 * @return {!Array<number>}
 */
proto.ding4.Layout.prototype.getItemsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.setItemsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.addItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional Template template = 7;
 * @return {?proto.ding4.Template}
 */
proto.ding4.Layout.prototype.getTemplate = function() {
  return /** @type{?proto.ding4.Template} */ (
    jspb.Message.getWrapperField(this, seo_pb.Template, 7));
};


/**
 * @param {?proto.ding4.Template|undefined} value
 * @return {!proto.ding4.Layout} returns this
*/
proto.ding4.Layout.prototype.setTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Layout} returns this
 */
proto.ding4.Layout.prototype.clearTemplate = function() {
  return this.setTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Layout.prototype.hasTemplate = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.Nav.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Nav.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Nav.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Nav} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Nav.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: (f = msg.getTitle()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f),
    activityId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pageId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    link: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isBlank: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    customized: jspb.Message.getFieldWithDefault(msg, 7, ""),
    navsList: jspb.Message.toObjectList(msg.getNavsList(),
    proto.ding4.Nav.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Nav}
 */
proto.ding4.Nav.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Nav;
  return proto.ding4.Nav.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Nav} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Nav}
 */
proto.ding4.Nav.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivityId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBlank(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomized(value);
      break;
    case 8:
      var value = new proto.ding4.Nav;
      reader.readMessage(value,proto.ding4.Nav.deserializeBinaryFromReader);
      msg.addNavs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Nav.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Nav.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Nav} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Nav.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getActivityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPageId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsBlank();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getCustomized();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNavsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ding4.Nav.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Value title = 1;
 * @return {?proto.google.protobuf.Value}
 */
proto.ding4.Nav.prototype.getTitle = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 1));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.ding4.Nav} returns this
*/
proto.ding4.Nav.prototype.setTitle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.clearTitle = function() {
  return this.setTitle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Nav.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string activity_id = 2;
 * @return {string}
 */
proto.ding4.Nav.prototype.getActivityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.setActivityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string class_id = 3;
 * @return {string}
 */
proto.ding4.Nav.prototype.getClassId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.setClassId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string page_id = 4;
 * @return {string}
 */
proto.ding4.Nav.prototype.getPageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.setPageId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string link = 5;
 * @return {string}
 */
proto.ding4.Nav.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_blank = 6;
 * @return {boolean}
 */
proto.ding4.Nav.prototype.getIsBlank = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.setIsBlank = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string customized = 7;
 * @return {string}
 */
proto.ding4.Nav.prototype.getCustomized = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.setCustomized = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Nav navs = 8;
 * @return {!Array<!proto.ding4.Nav>}
 */
proto.ding4.Nav.prototype.getNavsList = function() {
  return /** @type{!Array<!proto.ding4.Nav>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ding4.Nav, 8));
};


/**
 * @param {!Array<!proto.ding4.Nav>} value
 * @return {!proto.ding4.Nav} returns this
*/
proto.ding4.Nav.prototype.setNavsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ding4.Nav=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ding4.Nav}
 */
proto.ding4.Nav.prototype.addNavs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ding4.Nav, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.Nav} returns this
 */
proto.ding4.Nav.prototype.clearNavsList = function() {
  return this.setNavsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.Footer.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Footer.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Footer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Footer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Footer.toObject = function(includeInstance, msg) {
  var f, obj = {
    navList: jspb.Message.toObjectList(msg.getNavList(),
    proto.ding4.Nav.toObject, includeInstance),
    template: (f = msg.getTemplate()) && seo_pb.Template.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Footer}
 */
proto.ding4.Footer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Footer;
  return proto.ding4.Footer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Footer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Footer}
 */
proto.ding4.Footer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ding4.Nav;
      reader.readMessage(value,proto.ding4.Nav.deserializeBinaryFromReader);
      msg.addNav(value);
      break;
    case 2:
      var value = new seo_pb.Template;
      reader.readMessage(value,seo_pb.Template.deserializeBinaryFromReader);
      msg.setTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Footer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Footer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Footer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Footer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNavList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ding4.Nav.serializeBinaryToWriter
    );
  }
  f = message.getTemplate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      seo_pb.Template.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Nav nav = 1;
 * @return {!Array<!proto.ding4.Nav>}
 */
proto.ding4.Footer.prototype.getNavList = function() {
  return /** @type{!Array<!proto.ding4.Nav>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ding4.Nav, 1));
};


/**
 * @param {!Array<!proto.ding4.Nav>} value
 * @return {!proto.ding4.Footer} returns this
*/
proto.ding4.Footer.prototype.setNavList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ding4.Nav=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ding4.Nav}
 */
proto.ding4.Footer.prototype.addNav = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ding4.Nav, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.Footer} returns this
 */
proto.ding4.Footer.prototype.clearNavList = function() {
  return this.setNavList([]);
};


/**
 * optional Template template = 2;
 * @return {?proto.ding4.Template}
 */
proto.ding4.Footer.prototype.getTemplate = function() {
  return /** @type{?proto.ding4.Template} */ (
    jspb.Message.getWrapperField(this, seo_pb.Template, 2));
};


/**
 * @param {?proto.ding4.Template|undefined} value
 * @return {!proto.ding4.Footer} returns this
*/
proto.ding4.Footer.prototype.setTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.Footer} returns this
 */
proto.ding4.Footer.prototype.clearTemplate = function() {
  return this.setTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.Footer.prototype.hasTemplate = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.StyleColor.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.StyleColor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.StyleColor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.toObject = function(includeInstance, msg) {
  var f, obj = {
    background: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logoStyle: (f = msg.getLogoStyle()) && proto.ding4.StyleColor.LogoStyle.toObject(includeInstance, f),
    headerStyle: (f = msg.getHeaderStyle()) && proto.ding4.StyleColor.HeaderStyle.toObject(includeInstance, f),
    footerStyle: (f = msg.getFooterStyle()) && proto.ding4.StyleColor.FooterStyle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.StyleColor}
 */
proto.ding4.StyleColor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.StyleColor;
  return proto.ding4.StyleColor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.StyleColor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.StyleColor}
 */
proto.ding4.StyleColor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackground(value);
      break;
    case 2:
      var value = new proto.ding4.StyleColor.LogoStyle;
      reader.readMessage(value,proto.ding4.StyleColor.LogoStyle.deserializeBinaryFromReader);
      msg.setLogoStyle(value);
      break;
    case 3:
      var value = new proto.ding4.StyleColor.HeaderStyle;
      reader.readMessage(value,proto.ding4.StyleColor.HeaderStyle.deserializeBinaryFromReader);
      msg.setHeaderStyle(value);
      break;
    case 4:
      var value = new proto.ding4.StyleColor.FooterStyle;
      reader.readMessage(value,proto.ding4.StyleColor.FooterStyle.deserializeBinaryFromReader);
      msg.setFooterStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.StyleColor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.StyleColor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.StyleColor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackground();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogoStyle();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ding4.StyleColor.LogoStyle.serializeBinaryToWriter
    );
  }
  f = message.getHeaderStyle();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ding4.StyleColor.HeaderStyle.serializeBinaryToWriter
    );
  }
  f = message.getFooterStyle();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ding4.StyleColor.FooterStyle.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.StyleColor.LogoStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.StyleColor.LogoStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.StyleColor.LogoStyle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.LogoStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, ""),
    width: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paddingTop: jspb.Message.getFieldWithDefault(msg, 3, ""),
    navTop: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.StyleColor.LogoStyle}
 */
proto.ding4.StyleColor.LogoStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.StyleColor.LogoStyle;
  return proto.ding4.StyleColor.LogoStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.StyleColor.LogoStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.StyleColor.LogoStyle}
 */
proto.ding4.StyleColor.LogoStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidth(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaddingTop(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNavTop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.StyleColor.LogoStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.StyleColor.LogoStyle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.StyleColor.LogoStyle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.LogoStyle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWidth();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaddingTop();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNavTop();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string height = 1;
 * @return {string}
 */
proto.ding4.StyleColor.LogoStyle.prototype.getHeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.LogoStyle} returns this
 */
proto.ding4.StyleColor.LogoStyle.prototype.setHeight = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string width = 2;
 * @return {string}
 */
proto.ding4.StyleColor.LogoStyle.prototype.getWidth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.LogoStyle} returns this
 */
proto.ding4.StyleColor.LogoStyle.prototype.setWidth = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string padding_top = 3;
 * @return {string}
 */
proto.ding4.StyleColor.LogoStyle.prototype.getPaddingTop = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.LogoStyle} returns this
 */
proto.ding4.StyleColor.LogoStyle.prototype.setPaddingTop = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string nav_top = 4;
 * @return {string}
 */
proto.ding4.StyleColor.LogoStyle.prototype.getNavTop = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.LogoStyle} returns this
 */
proto.ding4.StyleColor.LogoStyle.prototype.setNavTop = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.StyleColor.HeaderStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.StyleColor.HeaderStyle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.HeaderStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    color: jspb.Message.getFieldWithDefault(msg, 1, ""),
    background: jspb.Message.getFieldWithDefault(msg, 2, ""),
    toolColor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    toolBackground: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mobileBackground: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.StyleColor.HeaderStyle}
 */
proto.ding4.StyleColor.HeaderStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.StyleColor.HeaderStyle;
  return proto.ding4.StyleColor.HeaderStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.StyleColor.HeaderStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.StyleColor.HeaderStyle}
 */
proto.ding4.StyleColor.HeaderStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackground(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToolColor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToolBackground(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileBackground(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.StyleColor.HeaderStyle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.StyleColor.HeaderStyle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.HeaderStyle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBackground();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToolColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToolBackground();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMobileBackground();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string color = 1;
 * @return {string}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.HeaderStyle} returns this
 */
proto.ding4.StyleColor.HeaderStyle.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string background = 2;
 * @return {string}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.getBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.HeaderStyle} returns this
 */
proto.ding4.StyleColor.HeaderStyle.prototype.setBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tool_color = 3;
 * @return {string}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.getToolColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.HeaderStyle} returns this
 */
proto.ding4.StyleColor.HeaderStyle.prototype.setToolColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tool_background = 4;
 * @return {string}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.getToolBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.HeaderStyle} returns this
 */
proto.ding4.StyleColor.HeaderStyle.prototype.setToolBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string mobile = 5;
 * @return {string}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.HeaderStyle} returns this
 */
proto.ding4.StyleColor.HeaderStyle.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mobile_background = 6;
 * @return {string}
 */
proto.ding4.StyleColor.HeaderStyle.prototype.getMobileBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.HeaderStyle} returns this
 */
proto.ding4.StyleColor.HeaderStyle.prototype.setMobileBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.StyleColor.FooterStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.StyleColor.FooterStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.StyleColor.FooterStyle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.FooterStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    color: jspb.Message.getFieldWithDefault(msg, 2, ""),
    background: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.StyleColor.FooterStyle}
 */
proto.ding4.StyleColor.FooterStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.StyleColor.FooterStyle;
  return proto.ding4.StyleColor.FooterStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.StyleColor.FooterStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.StyleColor.FooterStyle}
 */
proto.ding4.StyleColor.FooterStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackground(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.StyleColor.FooterStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.StyleColor.FooterStyle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.StyleColor.FooterStyle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.StyleColor.FooterStyle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBackground();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.ding4.StyleColor.FooterStyle.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.FooterStyle} returns this
 */
proto.ding4.StyleColor.FooterStyle.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string color = 2;
 * @return {string}
 */
proto.ding4.StyleColor.FooterStyle.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.FooterStyle} returns this
 */
proto.ding4.StyleColor.FooterStyle.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string background = 3;
 * @return {string}
 */
proto.ding4.StyleColor.FooterStyle.prototype.getBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor.FooterStyle} returns this
 */
proto.ding4.StyleColor.FooterStyle.prototype.setBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string background = 1;
 * @return {string}
 */
proto.ding4.StyleColor.prototype.getBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.StyleColor} returns this
 */
proto.ding4.StyleColor.prototype.setBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LogoStyle logo_style = 2;
 * @return {?proto.ding4.StyleColor.LogoStyle}
 */
proto.ding4.StyleColor.prototype.getLogoStyle = function() {
  return /** @type{?proto.ding4.StyleColor.LogoStyle} */ (
    jspb.Message.getWrapperField(this, proto.ding4.StyleColor.LogoStyle, 2));
};


/**
 * @param {?proto.ding4.StyleColor.LogoStyle|undefined} value
 * @return {!proto.ding4.StyleColor} returns this
*/
proto.ding4.StyleColor.prototype.setLogoStyle = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.StyleColor} returns this
 */
proto.ding4.StyleColor.prototype.clearLogoStyle = function() {
  return this.setLogoStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.StyleColor.prototype.hasLogoStyle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional HeaderStyle header_style = 3;
 * @return {?proto.ding4.StyleColor.HeaderStyle}
 */
proto.ding4.StyleColor.prototype.getHeaderStyle = function() {
  return /** @type{?proto.ding4.StyleColor.HeaderStyle} */ (
    jspb.Message.getWrapperField(this, proto.ding4.StyleColor.HeaderStyle, 3));
};


/**
 * @param {?proto.ding4.StyleColor.HeaderStyle|undefined} value
 * @return {!proto.ding4.StyleColor} returns this
*/
proto.ding4.StyleColor.prototype.setHeaderStyle = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.StyleColor} returns this
 */
proto.ding4.StyleColor.prototype.clearHeaderStyle = function() {
  return this.setHeaderStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.StyleColor.prototype.hasHeaderStyle = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FooterStyle footer_style = 4;
 * @return {?proto.ding4.StyleColor.FooterStyle}
 */
proto.ding4.StyleColor.prototype.getFooterStyle = function() {
  return /** @type{?proto.ding4.StyleColor.FooterStyle} */ (
    jspb.Message.getWrapperField(this, proto.ding4.StyleColor.FooterStyle, 4));
};


/**
 * @param {?proto.ding4.StyleColor.FooterStyle|undefined} value
 * @return {!proto.ding4.StyleColor} returns this
*/
proto.ding4.StyleColor.prototype.setFooterStyle = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ding4.StyleColor} returns this
 */
proto.ding4.StyleColor.prototype.clearFooterStyle = function() {
  return this.setFooterStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ding4.StyleColor.prototype.hasFooterStyle = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.ding4);
