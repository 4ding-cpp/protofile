// source: browse.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ding4.Browse', null, global);
goog.exportSymbol('proto.ding4.BrowseRecord', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.Browse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ding4.Browse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.Browse.displayName = 'proto.ding4.Browse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ding4.BrowseRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ding4.BrowseRecord.repeatedFields_, null);
};
goog.inherits(proto.ding4.BrowseRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ding4.BrowseRecord.displayName = 'proto.ding4.BrowseRecord';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.Browse.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.Browse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.Browse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Browse.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    target: jspb.Message.getFieldWithDefault(msg, 3, ""),
    targetId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    browse: jspb.Message.getFieldWithDefault(msg, 5, 0),
    times: jspb.Message.getFieldWithDefault(msg, 6, 0),
    profit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    customer: jspb.Message.getFieldWithDefault(msg, 8, 0),
    orders: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    price: jspb.Message.getFieldWithDefault(msg, 11, 0),
    freight: jspb.Message.getFieldWithDefault(msg, 12, 0),
    isMobile: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.Browse}
 */
proto.ding4.Browse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.Browse;
  return proto.ding4.Browse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.Browse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.Browse}
 */
proto.ding4.Browse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBrowse(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimes(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProfit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCustomer(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrders(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrice(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreight(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMobile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.Browse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.Browse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.Browse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.Browse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTargetId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBrowse();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTimes();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCustomer();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getOrders();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getFreight();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getIsMobile();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string date = 1;
 * @return {string}
 */
proto.ding4.Browse.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_id = 2;
 * @return {string}
 */
proto.ding4.Browse.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string target = 3;
 * @return {string}
 */
proto.ding4.Browse.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string target_id = 4;
 * @return {string}
 */
proto.ding4.Browse.prototype.getTargetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setTargetId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 browse = 5;
 * @return {number}
 */
proto.ding4.Browse.prototype.getBrowse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setBrowse = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 times = 6;
 * @return {number}
 */
proto.ding4.Browse.prototype.getTimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setTimes = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 profit = 7;
 * @return {number}
 */
proto.ding4.Browse.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setProfit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 customer = 8;
 * @return {number}
 */
proto.ding4.Browse.prototype.getCustomer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setCustomer = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 orders = 9;
 * @return {number}
 */
proto.ding4.Browse.prototype.getOrders = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setOrders = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 amount = 10;
 * @return {number}
 */
proto.ding4.Browse.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 price = 11;
 * @return {number}
 */
proto.ding4.Browse.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 freight = 12;
 * @return {number}
 */
proto.ding4.Browse.prototype.getFreight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setFreight = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool is_mobile = 13;
 * @return {boolean}
 */
proto.ding4.Browse.prototype.getIsMobile = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ding4.Browse} returns this
 */
proto.ding4.Browse.prototype.setIsMobile = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ding4.BrowseRecord.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ding4.BrowseRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.ding4.BrowseRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ding4.BrowseRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.BrowseRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    browseList: jspb.Message.toObjectList(msg.getBrowseList(),
    proto.ding4.Browse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ding4.BrowseRecord}
 */
proto.ding4.BrowseRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ding4.BrowseRecord;
  return proto.ding4.BrowseRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ding4.BrowseRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ding4.BrowseRecord}
 */
proto.ding4.BrowseRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ding4.Browse;
      reader.readMessage(value,proto.ding4.Browse.deserializeBinaryFromReader);
      msg.addBrowse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ding4.BrowseRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ding4.BrowseRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ding4.BrowseRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ding4.BrowseRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBrowseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ding4.Browse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Browse browse = 1;
 * @return {!Array<!proto.ding4.Browse>}
 */
proto.ding4.BrowseRecord.prototype.getBrowseList = function() {
  return /** @type{!Array<!proto.ding4.Browse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ding4.Browse, 1));
};


/**
 * @param {!Array<!proto.ding4.Browse>} value
 * @return {!proto.ding4.BrowseRecord} returns this
*/
proto.ding4.BrowseRecord.prototype.setBrowseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ding4.Browse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ding4.Browse}
 */
proto.ding4.BrowseRecord.prototype.addBrowse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ding4.Browse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ding4.BrowseRecord} returns this
 */
proto.ding4.BrowseRecord.prototype.clearBrowseList = function() {
  return this.setBrowseList([]);
};


goog.object.extend(exports, proto.ding4);
